<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>P_IDE on R &amp; Python Blog</title>
        <link>http://localhost:5082/csc-data-blog/categories/p_ide/</link>
        <description>Recent content in P_IDE on R &amp; Python Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Center for Scholarly Communication, UBC Okanagan</copyright>
        <lastBuildDate>Wed, 26 Jul 2023 09:00:00 -0800</lastBuildDate><atom:link href="http://localhost:5082/csc-data-blog/categories/p_ide/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Using Python in RStudio with Reticulate Package</title>
        <link>http://localhost:5082/csc-data-blog/p/using-python-in-rstudio-with-reticulate-package/</link>
        <pubDate>Wed, 26 Jul 2023 09:00:00 -0800</pubDate>
        
        <guid>http://localhost:5082/csc-data-blog/p/using-python-in-rstudio-with-reticulate-package/</guid>
        <description>&lt;p&gt;As we know, Jupyter Notebook can be used easily with our UBC login information via &lt;a class=&#34;link&#34; href=&#34;https://ubc.syzygy.ca/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Syzygy&lt;/a&gt;. Jupyter Notebook can also be downloaded to a computer and used via Anaconda. There are many different interfaces that allow us to use Python. One of the more interesting ones to note is actually RStudio. There is a package in R called &lt;em&gt;reticulate&lt;/em&gt; that allows us to create an RMarkdown file and use both R and Python code chunks within the same file. This is actually how this blog is able to show both R and Python content! Let&amp;rsquo;s get started on how &lt;em&gt;reticulate&lt;/em&gt; is used in RStudio to include Python code.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation
&lt;/h2&gt;&lt;p&gt;First, installation is required. To install the reticulate package in RStudio from CRAN, type the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;install.packages(&amp;#34;reticulate&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;python-version&#34;&gt;Python Version
&lt;/h2&gt;&lt;p&gt;Next, we need to access the version of Python desired. Reticulate will, by default, find and use the version of Python via &lt;code&gt;PATH&lt;/code&gt;. To check this, type &lt;code&gt;Sys.which(&amp;quot;python&amp;quot;)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you would like to change the version to something other than what is found in &lt;code&gt;PATH&lt;/code&gt;, try the &lt;code&gt;use_python()&lt;/code&gt; function. Here is an example of how to call the package from the library, and then use a different path to get to the desired Python version.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;library(reticulate)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use_python(&amp;#34;/my/file/path/python&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;getting-started&#34;&gt;Getting Started
&lt;/h1&gt;&lt;p&gt;Now that the &lt;em&gt;reticulate&lt;/em&gt; package has been installed, we can start using Python within an RMarkdown document.&lt;/p&gt;
&lt;p&gt;Once an RMarkdown file has been started, create a new code block. Note that on a Windows, a shortcut for adding a new code block is Ctrl+alt+i. Once a new code block appears, it should look like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:5082/csc-data-blog/p/using-python-in-rstudio-with-reticulate-package/images/r-code-chunk.png&#34;
	width=&#34;361&#34;
	height=&#34;67&#34;
	srcset=&#34;http://localhost:5082/csc-data-blog/p/using-python-in-rstudio-with-reticulate-package/images/r-code-chunk_hu_55df813411c7ca7d.png 480w, http://localhost:5082/csc-data-blog/p/using-python-in-rstudio-with-reticulate-package/images/r-code-chunk_hu_5228893c6b3302d3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;538&#34;
		data-flex-basis=&#34;1293px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If you were to type code here, it would be in R. To change it to Python, simply replace the &amp;lsquo;r&amp;rsquo; with &amp;lsquo;python&amp;rsquo;. Then it will look like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:5082/csc-data-blog/p/using-python-in-rstudio-with-reticulate-package/images/python-code-chunk.png&#34;
	width=&#34;409&#34;
	height=&#34;58&#34;
	srcset=&#34;http://localhost:5082/csc-data-blog/p/using-python-in-rstudio-with-reticulate-package/images/python-code-chunk_hu_508e35ab1fa9cd94.png 480w, http://localhost:5082/csc-data-blog/p/using-python-in-rstudio-with-reticulate-package/images/python-code-chunk_hu_2b4b2d620ffa2ed9.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;705&#34;
		data-flex-basis=&#34;1692px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Now, the console below will change to show Python code once something in this block is run. You can easily switch back and forth between R and Python from code chunk to code chunk.&lt;/p&gt;
&lt;p&gt;You can also see your saved variables in the environment, separated between R and Python. Note that when you do something such as import a dataset, if you wanted to perform manipulations on the dataset in both R and Python, you will have to load the dataset in using both R and Python, and it will create separate variables which do not override each other. They will stay speparate in the environment.&lt;/p&gt;
&lt;p&gt;To change between R and Python environments, go to the Environment window and click the dropdown arrow. It should look like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:5082/csc-data-blog/p/using-python-in-rstudio-with-reticulate-package/images/environment.png&#34;
	width=&#34;654&#34;
	height=&#34;597&#34;
	srcset=&#34;http://localhost:5082/csc-data-blog/p/using-python-in-rstudio-with-reticulate-package/images/environment_hu_3946c20166b342e6.png 480w, http://localhost:5082/csc-data-blog/p/using-python-in-rstudio-with-reticulate-package/images/environment_hu_9bf021c240f0f6a9.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;109&#34;
		data-flex-basis=&#34;262px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If you would like to see some examples, take a look at the &lt;code&gt;_src&lt;/code&gt; folder in the GitHub repo for this blog to see how each of the posts are created in both R and Python. The link to the backend content for this blog can be found &lt;a class=&#34;link&#34; href=&#34;https://github.com/csc-ubc-okanagan/R-Python-Blog&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Jupyter Notebook</title>
        <link>http://localhost:5082/csc-data-blog/p/jupyter-notebook/</link>
        <pubDate>Mon, 05 Jun 2023 18:00:00 -0800</pubDate>
        
        <guid>http://localhost:5082/csc-data-blog/p/jupyter-notebook/</guid>
        <description>&lt;p&gt;Jupyter Notebook is a web-based interactive computing platform, and it can be used for many things, aside from Python. You can even use both R and Python within the same document.&lt;/p&gt;
&lt;p&gt;Think of Python (or R) as the language you are writing in, and Jupyter as the pen and pencil. This is how Python and Jupyter are used together.&lt;/p&gt;
&lt;h3 id=&#34;note&#34;&gt;Note:
&lt;/h3&gt;&lt;p&gt;There are many different IDEs (integrated development environment) for Python. To name a few, Programiz, Atom, Visual Studio Code, Spyder, and many more. If a Jupyter install is causing trouble, or if you do not like the interface and want something similar to R Studio, Spyder is a good option because it is a very familiar interface for R Studio users. Programiz is also great because it doesn&amp;rsquo;t require an install.&lt;/p&gt;
&lt;h2 id=&#34;syzygy&#34;&gt;Syzygy
&lt;/h2&gt;&lt;p&gt;Syzygy (pronunciation up for debate) is a great way to use Jupyter without having to download it to your local computer. However, it does require your UBC login to use. It also can access your local files as well as UBC OneDrive files. To use, simply follow this &lt;a class=&#34;link&#34; href=&#34;https://ubc.syzygy.ca/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;link&lt;/a&gt;, click the sign on button in the top right, and use your UBC login to sign in. You will be able to creat files, view existing files, and enjoy all of the functionalities that Jupyter has to offer.&lt;/p&gt;
&lt;h2 id=&#34;downloading-jupyter&#34;&gt;Downloading Jupyter
&lt;/h2&gt;&lt;p&gt;If you prefer to download Jupyter, it can be done with Anaconda. This &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=WUeBzT43JyY&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;video&lt;/a&gt; is a great resource explaining how to download both Jupyter and Anaconda, as well as how to get started using Jupyter.&lt;/p&gt;
&lt;p&gt;Alternatively, you can follow the instructions on this &lt;a class=&#34;link&#34; href=&#34;https://www.codecademy.com/article/setting-up-jupyter-notebook&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;webpage&lt;/a&gt; to do the same install. Note that it has slightly different instructions for Windows and Mac users.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
